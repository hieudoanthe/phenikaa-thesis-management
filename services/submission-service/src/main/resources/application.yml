server:
  port: ${SUBMISSION_SERVICE_PORT}

spring:
  application:
    name: ${SUBMISSION_SERVICE_NAME}
  profiles:
    active: ${SPRING_PROFILES_ACTIVE}
  security:
    user:
      name: ${SPRING_SECURITY_USER_NAME}
      password: ${SPRING_SECURITY_USER_PASSWORD}
  servlet:
    multipart:
      enabled: ${SPRING_SERVLET_MULTIPART_ENABLED}
      max-file-size: ${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE}
      max-request-size: ${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE}
      file-size-threshold: ${SPRING_SERVLET_MULTIPART_FILE_SIZE_THRESHOLD}
  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:},optional:file:.env[.properties],optional:file:../.env[.properties],optional:file:../../.env[.properties],optional:classpath:.env[.properties]
  cloud:
    config:
      uri: ${SPRING_CLOUD_CONFIG_URI}
      fail-fast: ${SPRING_CLOUD_CONFIG_FAIL_FAST}
      retry:
        initial-interval: ${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
        max-attempts: ${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
        multiplier: ${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      label: ${SPRING_CLOUD_CONFIG_LABEL}

cloudinary:
  cloud_name: ${CLOUDINARY_CLOUD_NAME}
  api_key: ${CLOUDINARY_API_KEY}
  api_secret: ${CLOUDINARY_API_SECRET}

file:
  storage:
    type: ${FILE_STORAGE_TYPE}
    traditional:
      base-path: ${FILE_STORAGE_TRADITIONAL_BASE_PATH}
      buffer-size: ${FILE_STORAGE_BUFFER_SIZE}
    nio:
      base-path: ${FILE_STORAGE_NIO_BASE_PATH}
      buffer-size: ${FILE_STORAGE_BUFFER_SIZE}
    cloudinary:
      enabled: ${FILE_STORAGE_CLOUDINARY_ENABLED}
      backup-local: ${FILE_STORAGE_CLOUDINARY_BACKUP_LOCAL}

