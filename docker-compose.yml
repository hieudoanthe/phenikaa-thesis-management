version: '3.8'

services:
  # Redis
  redis:
    image: redis:8-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Config Server - Port 8888
  config-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    environment:
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=${SPRING_CLOUD_CONFIG_SERVER_GIT_URI}
      - SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL=${SPRING_CLOUD_CONFIG_SERVER_GIT_DEFAULT_LABEL}
      - SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME=${SPRING_CLOUD_CONFIG_SERVER_GIT_USERNAME}
      - SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD=${SPRING_CLOUD_CONFIG_SERVER_GIT_PASSWORD}
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "config-server.jar"]

  # Discovery Server (Eureka) - Port 8761
  discovery-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - DISCOVERY_SERVER_PORT=${DISCOVERY_SERVER_PORT}
      - DISCOVERY_SERVER_NAME=${DISCOVERY_SERVER_NAME}
      - EUREKA_SERVER_ENABLE_SELF_PRESERVATION=${EUREKA_SERVER_ENABLE_SELF_PRESERVATION}
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "discovery-server.jar"]

  # API Gateway - Port 8080
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - SPRING_MAIN_WEB_APPLICATION_TYPE=${SPRING_MAIN_WEB_APPLICATION_TYPE}
      - API_GATEWAY_NAME=${API_GATEWAY_NAME}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED=${SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_ENABLED}
      - SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID=${SPRING_CLOUD_GATEWAY_DISCOVERY_LOCATOR_LOWER_CASE_SERVICE_ID}
      - AUTH_SERVICE_NAME=${AUTH_SERVICE_NAME}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - USER_SERVICE_NAME=${USER_SERVICE_NAME}
      - USER_SERVICE_URL=${USER_SERVICE_URL}
      - THESIS_SERVICE_NAME=${THESIS_SERVICE_NAME}
      - THESIS_SERVICE_URL=${THESIS_SERVICE_URL}
      - ASSIGN_SERVICE_NAME=${ASSIGN_SERVICE_NAME}
      - ASSIGN_SERVICE_URL=${ASSIGN_SERVICE_URL}
      - PROFILE_SERVICE_NAME=${PROFILE_SERVICE_NAME}
      - PROFILE_SERVICE_URL=${PROFILE_SERVICE_URL}
      - ACADEMIC_CONFIG_SERVICE_NAME=${ACADEMIC_CONFIG_SERVICE_NAME}
      - ACADEMIC_CONFIG_SERVICE_URL=${ACADEMIC_CONFIG_SERVICE_URL}
      - EVAL_SERVICE_NAME=${EVAL_SERVICE_NAME}
      - EVAL_SERVICE_URL=${EVAL_SERVICE_URL}
      - SUBMISSION_SERVICE_NAME=${SUBMISSION_SERVICE_NAME}
      - SUBMISSION_SERVICE_URL=${SUBMISSION_SERVICE_URL}
      - COMMUNICATION_LOG_SERVICE_NAME=${COMMUNICATION_LOG_SERVICE_NAME}
      - COMMUNICATION_LOG_SERVICE_URL=${COMMUNICATION_LOG_SERVICE_URL}
      - COMMUNICATION_LOG_SERVICE_NAME_WS=${COMMUNICATION_LOG_SERVICE_NAME_WS}
      - COMMUNICATION_LOG_SERVICE_WS_URL=${COMMUNICATION_LOG_SERVICE_WS_URL}
      - EURKA_INSTANCE_PREFER_IP_ADDRESS=${EURKA_INSTANCE_PREFER_IP_ADDRESS}
      - DOMAIN=${DOMAIN}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}
      - EUREKA_CLIENT_FETCH_REGISTRY=${EUREKA_CLIENT_FETCH_REGISTRY}
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
    depends_on:
      - discovery-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "api-gateway.jar"]

  # Auth Service - Port 8090
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8090:8090"
    environment:
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT}
      - AUTH_SERVICE_NAME=${AUTH_SERVICE_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "auth-service.jar"]

  # User Service - Port 8081
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      - USER_SERVICE_PORT=${USER_SERVICE_PORT}
      - USER_SERVICE_NAME=${USER_SERVICE_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "user-service.jar"]

  # Thesis Service - Port 8082
  thesis-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thesis-service
    ports:
      - "8082:8082"
    environment:
      - THESIS_SERVICE_PORT=${THESIS_SERVICE_PORT}
      - THESIS_SERVICE_NAME=${THESIS_SERVICE_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - AI_GEMINI_API_KEY=${AI_GEMINI_API_KEY}
      - AI_GEMINI_MODEL_NAME=${AI_GEMINI_MODEL_NAME}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "thesis-service.jar"]

  # Profile Service - Port 8083
  profile-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: profile-service
    ports:
      - "8083:8083"
    environment:
      - PROFILE_SERVICE_PORT=${PROFILE_SERVICE_PORT}
      - PROFILE_SERVICE_NAME=${PROFILE_SERVICE_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "profile-service.jar"]

  # Eval Service - Port 8084
  eval-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eval-service
    ports:
      - "8084:8084"
    environment:
      - EVAL_SERVICE_PORT=${EVAL_SERVICE_PORT}
      - EVAL_SERVICE_NAME=${EVAL_SERVICE_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "eval-service.jar"]

  # Assign Service - Port 8085
  assign-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: assign-service
    ports:
      - "8085:8085"
    environment:
      - ASSIGN_SERVICE_PORT=${ASSIGN_SERVICE_PORT}
      - ASSIGN_SERVICE_NAME=${ASSIGN_SERVICE_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "assign-service.jar"]

  # Submission Service - Port 8086
  submission-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: submission-service
    ports:
      - "8086:8086"
    environment:
      - SUBMISSION_SERVICE_PORT=${SUBMISSION_SERVICE_PORT}
      - SUBMISSION_SERVICE_NAME=${SUBMISSION_SERVICE_NAME}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPRING_SERVLET_MULTIPART_ENABLED=${SPRING_SERVLET_MULTIPART_ENABLED}
      - SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE=${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE}
      - SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE=${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE}
      - SPRING_SERVLET_MULTIPART_FILE_SIZE_THRESHOLD=${SPRING_SERVLET_MULTIPART_FILE_SIZE_THRESHOLD}
      - FILE_STORAGE_TYPE=${FILE_STORAGE_TYPE}
      - FILE_STORAGE_TRADITIONAL_BASE_PATH=${FILE_STORAGE_TRADITIONAL_BASE_PATH}
      - FILE_STORAGE_BUFFER_SIZE=${FILE_STORAGE_BUFFER_SIZE}
      - FILE_STORAGE_NIO_BASE_PATH=${FILE_STORAGE_NIO_BASE_PATH}
      - FILE_STORAGE_CLOUDINARY_ENABLED=${FILE_STORAGE_CLOUDINARY_ENABLED}
      - FILE_STORAGE_CLOUDINARY_BACKUP_LOCAL=${FILE_STORAGE_CLOUDINARY_BACKUP_LOCAL}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
      - EUREKA_CLIENT_FETCH_REGISTRY=${EUREKA_CLIENT_FETCH_REGISTRY}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "submission-service.jar"]

  # Academic Config Service - Port 8087
  academic-config-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: academic-config-service
    ports:
      - "8087:8087"
    environment:
      - ACADEMIC_CONFIG_SERVICE_PORT=${ACADEMIC_CONFIG_SERVICE_PORT}
      - ACADEMIC_CONFIG_SERVICE_NAME=${ACADEMIC_CONFIG_SERVICE_NAME}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - SPRING_CLOUD_CONFIG_URI=${SPRING_CLOUD_CONFIG_URI}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "academic-config-service.jar"]

  # Communication Log Service - Port 8088
  communication-log-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: communication-log-service
    ports:
      - "8088:8088"
    environment:
      - COMMUNICATION_LOG_SERVICE_PORT=${COMMUNICATION_LOG_SERVICE_PORT}
      - COMMUNICATION_LOG_SERVICE_NAME=${COMMUNICATION_LOG_SERVICE_NAME}
      - SPRING_SECURITY_USER_NAME=${SPRING_SECURITY_USER_NAME}
      - SPRING_SECURITY_USER_PASSWORD=${SPRING_SECURITY_USER_PASSWORD}
      - COMMUNICATION_LOG_SERVICE_NAME_WS=${COMMUNICATION_LOG_SERVICE_NAME_WS}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - SPRING_CLOUD_CONFIG_LABEL=${SPRING_CLOUD_CONFIG_LABEL}
      - SPRING_CLOUD_CONFIG_FAIL_FAST=${SPRING_CLOUD_CONFIG_FAIL_FAST}
      - SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS=${SPRING_CLOUD_CONFIG_RETRY_MAX_ATTEMPTS}
      - SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER=${SPRING_CLOUD_CONFIG_RETRY_MULTIPLIER}
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL=${SPRING_CLOUD_CONFIG_RETRY_INITIAL_INTERVAL}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SPRING_MAIL_HOST=${SPRING_MAIL_HOST}
      - SPRING_MAIL_PORT=${SPRING_MAIL_PORT}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH}
      - SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE}
      # Redis configuration
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - SPRING_REDIS_DATABASE=0
      - SPRING_REDIS_TIMEOUT=60000
      - SPRING_REDIS_PASSWORD=
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
      - EUREKA_CLIENT_FETCH_REGISTRY=${EUREKA_CLIENT_FETCH_REGISTRY}
    depends_on:
      - discovery-server
      - config-server
      - redis
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "communication-log-service.jar"]

volumes:
  redis_data:

networks:
  microservices-network:
    driver: bridge