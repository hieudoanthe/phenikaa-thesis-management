version: '3.8'

services:
  # Redis
  redis:
    image: redis:8-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - microservices-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Config Server - Port 8888
  config-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    env_file:
      - .env
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "config-server.jar"]

  # Discovery Server (Eureka) - Port 8761
  discovery-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8761:8761"
    env_file:
      - .env
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "discovery-server.jar"]

  # API Gateway - Port 8080
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "api-gateway.jar"]

  # Auth Service - Port 8090
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8090:8090"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "auth-service.jar"]

  # User Service - Port 8081
  user-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "user-service.jar"]

  # Thesis Service - Port 8082
  thesis-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: thesis-service
    ports:
      - "8082:8082"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "thesis-service.jar"]

  # Profile Service - Port 8083
  profile-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: profile-service
    ports:
      - "8083:8083"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "profile-service.jar"]

  # Eval Service - Port 8084
  eval-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: eval-service
    ports:
      - "8084:8084"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "eval-service.jar"]

  # Assign Service - Port 8085
  assign-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: assign-service
    ports:
      - "8085:8085"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "assign-service.jar"]

  # Submission Service - Port 8086
  submission-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: submission-service
    ports:
      - "8086:8086"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "submission-service.jar"]

  # Academic Config Service - Port 8087
  academic-config-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: academic-config-service
    ports:
      - "8087:8087"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "academic-config-service.jar"]

  # Communication Log Service - Port 8088
  communication-log-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: communication-log-service
    ports:
      - "8088:8088"
    env_file:
      - .env
    depends_on:
      - discovery-server
      - config-server
      - redis
    networks:
      - microservices-network
    restart: unless-stopped
    command: ["java", "-jar", "communication-log-service.jar"]

volumes:
  redis_data:

networks:
  microservices-network:
    driver: bridge